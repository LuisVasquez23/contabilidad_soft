/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.JPFrm;

import java.awt.Color;
import javax.swing.BorderFactory;
import Conexion.Conexion;
import Clases.*;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;

public class agregarEmpleadoFrmI extends javax.swing.JPanel {
    
    Conexion conn;
    scripts sc;
    Empleado empleado;
    int id;
    ResultSet rs;
    SimpleDateFormat formato;
    Date fecha_actual;
    
    public agregarEmpleadoFrmI() throws SQLException {
        initComponents();
        conn = new Conexion();
        sc = new scripts();
        fecha_actual = new Date();
        formato = new SimpleDateFormat("dd-MM-yyyy"); 
    }
    
    //procedimiento para limpiar los campos.
    public void limpiar(){ 
        String fechStr_actual = formato.format(fecha_actual);
        this.fechaContrato_input.setText(fechStr_actual);
        this.primerNombre_input.setText("");
        this.primerApellido_input.setText("");
        this.segundoApellido_input.setText("");
        this.segundoNombre_input.setText("");
        this.NIT_input.setText("0000-000000-000-0");
        this.salario_input.setText("");
        this.cargo_input.setText("");
        
        this.vacaiones_input.setSelectedIndex(-1);
        this.periodo_input.setSelectedIndex(-1);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datePicker = new com.raven.datechooser.DateChooser();
        jPanel1 = new javax.swing.JPanel();
        label_title = new javax.swing.JLabel();
        primerNombre_input = new Helpers.TextField();
        segundoNombre_input = new Helpers.TextField();
        lblDatosPersonales = new javax.swing.JLabel();
        primerApellido_input = new Helpers.TextField();
        segundoApellido_input = new Helpers.TextField();
        periodo_input = new Helpers.Combobox();
        lblDatosLaborales = new javax.swing.JLabel();
        cargo_input = new Helpers.TextField();
        salario_input = new Helpers.TextField();
        fechaContrato_input = new Helpers.TextField();
        vacaiones_input = new Helpers.Combobox();
        NIT_input = new Helpers.TextField();
        btn_agregarEmpleado = new javax.swing.JButton();
        btn_limpiarDatos = new javax.swing.JButton();

        datePicker.setForeground(new java.awt.Color(102, 102, 255));
        datePicker.setTextRefernce(fechaContrato_input);

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(891, 604));
        setPreferredSize(new java.awt.Dimension(891, 604));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        label_title.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        label_title.setText("Agregar Empleado");

        primerNombre_input.setForeground(new java.awt.Color(102, 102, 102));
        primerNombre_input.setToolTipText("Primer Nombre");
        primerNombre_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        primerNombre_input.setLabelText("Primer nombre");

        segundoNombre_input.setForeground(new java.awt.Color(102, 102, 102));
        segundoNombre_input.setToolTipText("Segundo nombre");
        segundoNombre_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        segundoNombre_input.setLabelText("Segundo nombre");

        lblDatosPersonales.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblDatosPersonales.setForeground(new java.awt.Color(102, 102, 102));
        lblDatosPersonales.setText("Datos personales");

        primerApellido_input.setForeground(new java.awt.Color(102, 102, 102));
        primerApellido_input.setToolTipText("Primer apellido");
        primerApellido_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        primerApellido_input.setLabelText("Primer apellido");

        segundoApellido_input.setForeground(new java.awt.Color(102, 102, 102));
        segundoApellido_input.setToolTipText("Segundo apellido");
        segundoApellido_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        segundoApellido_input.setLabelText("Segundo apellido");

        periodo_input.setForeground(new java.awt.Color(102, 102, 102));
        periodo_input.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mensual" }));
        periodo_input.setSelectedIndex(-1);
        periodo_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        periodo_input.setLabeText("Periodo de pago");

        lblDatosLaborales.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblDatosLaborales.setForeground(new java.awt.Color(102, 102, 102));
        lblDatosLaborales.setText("Datos laborales");

        cargo_input.setForeground(new java.awt.Color(102, 102, 102));
        cargo_input.setToolTipText("Cargo");
        cargo_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cargo_input.setLabelText("Puesto o cargo");

        salario_input.setForeground(new java.awt.Color(102, 102, 102));
        salario_input.setToolTipText("Sueldo");
        salario_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        salario_input.setLabelText("Salario");

        fechaContrato_input.setForeground(new java.awt.Color(102, 102, 102));
        fechaContrato_input.setToolTipText("Fecha de contrato");
        fechaContrato_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        fechaContrato_input.setLabelText("Fecha de contrato");

        vacaiones_input.setForeground(new java.awt.Color(102, 102, 102));
        vacaiones_input.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre", " " }));
        vacaiones_input.setSelectedIndex(-1);
        vacaiones_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        vacaiones_input.setLabeText("Mes de vacaciones");

        NIT_input.setForeground(new java.awt.Color(102, 102, 102));
        NIT_input.setText("0000-000000-000-0");
        NIT_input.setToolTipText("Cargo");
        NIT_input.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        NIT_input.setLabelText("NIT");
        NIT_input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NIT_inputMouseClicked(evt);
            }
        });

        btn_agregarEmpleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Icons/btn_agregarEmpleadoDB.png"))); // NOI18N
        btn_agregarEmpleado.setBorderPainted(false);
        btn_agregarEmpleado.setContentAreaFilled(false);
        btn_agregarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarEmpleadoActionPerformed(evt);
            }
        });

        btn_limpiarDatos.setBackground(new java.awt.Color(255, 102, 102));
        btn_limpiarDatos.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btn_limpiarDatos.setForeground(new java.awt.Color(255, 255, 255));
        btn_limpiarDatos.setText("Limpiar datos");
        btn_limpiarDatos.setBorder(null);
        btn_limpiarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDatosPersonales)
                        .addContainerGap(650, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label_title)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblDatosLaborales)
                                .addComponent(vacaiones_input, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                                .addComponent(salario_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(primerNombre_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(primerApellido_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cargo_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btn_agregarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(segundoApellido_input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(segundoNombre_input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(periodo_input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaContrato_input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NIT_input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_limpiarDatos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label_title)
                .addGap(18, 18, 18)
                .addComponent(lblDatosPersonales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(primerNombre_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(primerApellido_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDatosLaborales)
                        .addGap(18, 18, 18)
                        .addComponent(cargo_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(salario_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(vacaiones_input, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(253, 253, 253)
                                .addComponent(fechaContrato_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(segundoNombre_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(segundoApellido_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(periodo_input, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(NIT_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_agregarEmpleado)
                    .addComponent(btn_limpiarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_agregarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarEmpleadoActionPerformed
        String nombre, cargo, periodo = "", concat, nit = "", mes_vac = null, fecha = "";
        double sueldo = 0;
        Date fecha_contratacion;   
        boolean band_fecha =  false;
        
        
        String fechStr_actual;
        fechStr_actual = formato.format(fecha_actual);
        
        try {
            fecha_actual = formato.parse(fechStr_actual);
        } catch (ParseException ex) {
            Logger.getLogger(agregarEmpleadoFrmI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //concatenacion del nomnbre
        concat = this.primerNombre_input.getText().toUpperCase()+" "+this.segundoNombre_input.getText().toUpperCase()+" "
                +this.primerApellido_input.getText().toUpperCase()+" "+this.segundoApellido_input.getText().toUpperCase();
        
        //asignacion de la concatenacion a su respectiva variable
        nombre = concat;
        
        //asignacion del cargo
        cargo = this.cargo_input.getText().toUpperCase();
        
        //Para saber si no se ha seleccionado nada en la jcombo del periodo.
        try {
            periodo = this.periodo_input.getSelectedItem().toString();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de pago");
        }
        //Para la asignacion del sueldo
        try {
            sueldo = Double.parseDouble(this.salario_input.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en el campo de sueldo!");
        }
        
        //Para la asigniacion de la fecha de contratacion
        try {         
            fecha = this.fechaContrato_input.getText();
            //cambiar la fecha de string a date
            fecha_contratacion = (Date) formato.parse(this.fechaContrato_input.getText());
            
            //resta de fechas
            
            long diff = fecha_contratacion.getTime() - fecha_actual.getTime();
            TimeUnit unit = TimeUnit.DAYS;
            long dias = unit.convert(diff, TimeUnit.MILLISECONDS);
      
            if (dias <= 0) {
                band_fecha = true;
            }
            else{
                JOptionPane.showMessageDialog(null, "Incongruencia en la fecha");
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error en el campo de fecha");
        }
        
        
        //Asignacion del mes de vacacion
        try {
            //condicional para saber si puede tener vacaciones.
            //convertir la fecha del textfield a date 
            fecha_contratacion = (Date) formato.parse(this.fechaContrato_input.getText());
            long diff = fecha_contratacion.getTime() - fecha_actual.getTime();
            TimeUnit unit = TimeUnit.DAYS;
            long dias = unit.convert(diff, TimeUnit.MILLISECONDS);
            
            if (dias <= -365) {
                mes_vac = this.vacaiones_input.getSelectedItem().toString();
            }
            else{
//                JOptionPane.showMessageDialog(null, "Sigue soñando con las vacaciones");
            }
            
        } catch (Exception e) {
        }
        
        //condicional para saber si el nit se ha ingresado
        if (this.NIT_input.getText().equals("0000-000000-000-0") || this.NIT_input.getText().length() < 0) {
            nit = "";
        }
        else{
            nit = this.NIT_input.getText();
        }
        if (nombre.length() > 3 && cargo.length() > 0 && periodo.length() > 0 && sueldo > 0 && band_fecha == true && nit.length() ==  17) {
            this.Cargar_datos(nit, nombre, cargo, periodo, fecha, mes_vac, sueldo);
            this.limpiar();
        }
        else{
            JOptionPane.showMessageDialog(null, "Revise los campos!");
        }
    }//GEN-LAST:event_btn_agregarEmpleadoActionPerformed

    private void NIT_inputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NIT_inputMouseClicked
        
    }//GEN-LAST:event_NIT_inputMouseClicked

    private void btn_limpiarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarDatosActionPerformed
        this.limpiar();
    }//GEN-LAST:event_btn_limpiarDatosActionPerformed

    public void Cargar_datos(String pnit, String pnombre, String pcargo, String pPeriodo, String pfecha, String mes_vac,double psueldo){
        conn.Conexion();
        empleado = new Empleado();
        
        empleado.setNit(pnit);
        empleado.setNombre(pnombre);
        empleado.setCargo(pcargo);
        empleado.setPeriodo_Pago(pPeriodo);
        empleado.setFecha_contrato(pfecha);
        empleado.setSueldo(psueldo);
        empleado.setMes_vac(mes_vac);
        
        try {
            conn.agregar(sc.ingresar_empleado(), empleado);
            JOptionPane.showMessageDialog(null, "Se ha agregado el empleado");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al ingresar en la base de datos");
        }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Helpers.TextField NIT_input;
    private javax.swing.JButton btn_agregarEmpleado;
    private javax.swing.JButton btn_limpiarDatos;
    private Helpers.TextField cargo_input;
    private com.raven.datechooser.DateChooser datePicker;
    private Helpers.TextField fechaContrato_input;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel lblDatosLaborales;
    private javax.swing.JLabel lblDatosPersonales;
    private Helpers.Combobox periodo_input;
    private Helpers.TextField primerApellido_input;
    private Helpers.TextField primerNombre_input;
    private Helpers.TextField salario_input;
    private Helpers.TextField segundoApellido_input;
    private Helpers.TextField segundoNombre_input;
    private Helpers.Combobox vacaiones_input;
    // End of variables declaration//GEN-END:variables
}
